@page
@using Uitilites
@model RegisterModel
@{
    @if (User.IsInRole(SD.AdminRole))
    {
        ViewData["Title"] = "Create New User";
    }
    else
    {
        ViewData["Title"] = "Register";
    }

}


<div class="container">
    <div class="row my-3">
        <div class="col-md-6 ">
            <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h1 class="fw-bold">Create a new account.</h1>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Name" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Name">Name</label>
                    <span asp-validation-for="Input.Name" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Email">Email</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Adress" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Adress">Address</label>
                    <span asp-validation-for="Input.Adress" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.City" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.City">City</label>
                    <span asp-validation-for="Input.City" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.Password">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>

                @if (User.IsInRole(SD.AdminRole))
                {
                   <div class="my-3" >
                        <input required type="radio" name="RoleRadio" value="@SD.AdminRole" /> @SD.AdminRole
                        <input required type="radio" name="RoleRadio" value="@SD.EditorRole" /> @SD.EditorRole
                        <input required type="radio" name="RoleRadio" value="@SD.CustomerRole" /> @SD.CustomerRole
                   </div>
                }

                @if(User.IsInRole(SD.AdminRole)){
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Create New User</button>
                }else
                {
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
                }
            </form>
        </div>
        <div class="col-md-5 ">
            <section >
                <h3 class="mt-3">Use another service to register.</h3>
                <hr />
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                    article
                                    about setting up this ASP.NET application to support logging in via external services
                                </a>.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins!)
                                    {
                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>
    </div>

</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
